{
  "name": "hassu",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@aws-sdk/client-dynamodb": "3.43.0",
    "@aws-sdk/client-lambda": "3.43.0",
    "@aws-sdk/lib-dynamodb": "3.43.0",
    "@emotion/react": "11.7.1",
    "@emotion/styled": "11.6.0",
    "@fortawesome/fontawesome-svg-core": "1.2.36",
    "@fortawesome/free-brands-svg-icons": "5.15.4",
    "@fortawesome/free-regular-svg-icons": "5.15.4",
    "@fortawesome/free-solid-svg-icons": "5.15.4",
    "@fortawesome/react-fontawesome": "0.1.16",
    "@hookform/resolvers": "2.7.1",
    "@mui/material": "5.2.5",
    "@types/pdfkit": "0.12.3",
    "@types/uuid": "8.3.3",
    "apollo-cache-inmemory": "1.6.6",
    "apollo-client": "2.6.10",
    "apollo-link": "1.2.14",
    "apollo-link-http": "1.5.17",
    "aws-appsync": "4.1.2",
    "aws-xray-sdk": "3.3.4",
    "axios": "0.21.4",
    "classnames": "2.3.1",
    "esbuild": "0.12.19",
    "graphql": "14.7.0",
    "graphql-tag": "2.12.5",
    "jsonwebtoken": "8.5.1",
    "jwk-to-pem": "2.0.5",
    "lodash": "4.17.21",
    "loglevel": "1.7.1",
    "next": "11.1.2",
    "next-translate": "1.2.0",
    "node-cache": "5.1.2",
    "pdfkit": "0.12.3",
    "pino": "7.6.2",
    "react": "17.0.2",
    "react-dom": "17.0.2",
    "react-hook-form": "7.12.2",
    "source-map-support": "0.5.19",
    "swr": "1.1.0",
    "uuid": "8.3.2",
    "web-vitals": "2.1.0",
    "xml2js": "0.4.23",
    "yup": "0.32.9"
  },
  "devDependencies": {
    "@aws-cdk/aws-appsync": "1.132.0",
    "@aws-cdk/aws-cloudfront": "1.132.0",
    "@aws-cdk/aws-cloudfront-origins": "1.132.0",
    "@aws-cdk/aws-iam": "1.132.0",
    "@aws-cdk/aws-lambda": "1.132.0",
    "@aws-cdk/aws-lambda-event-sources": "1.132.0",
    "@aws-cdk/aws-lambda-nodejs": "1.132.0",
    "@aws-cdk/aws-opensearchservice": "1.132.0",
    "@aws-cdk/aws-s3": "1.132.0",
    "@aws-cdk/aws-s3-deployment": "1.132.0",
    "@aws-cdk/aws-wafv2": "1.132.0",
    "@aws-cdk/core": "1.132.0",
    "@aws-cdk/pipelines": "1.132.0",
    "@aws-sdk/client-cloudformation": "3.43.0",
    "@aws-sdk/client-s3": "3.43.0",
    "@aws-sdk/client-ssm": "3.42.0",
    "@babel/core": "7.15.8",
    "@istanbuljs/nyc-config-typescript": "1.0.2",
    "@semantic-release/exec": "6.0.2",
    "@sls-next/cdk-construct": "3.6.0",
    "@storybook/addon-actions": "6.3.12",
    "@storybook/addon-essentials": "6.3.12",
    "@storybook/addon-links": "6.3.12",
    "@storybook/addon-postcss": "2.0.0",
    "@storybook/react": "6.3.12",
    "@testing-library/jest-dom": "5.14.1",
    "@testing-library/react": "11.1.0",
    "@testing-library/user-event": "13.2.1",
    "@types/aws-lambda": "8.10.85",
    "@types/chai": "4.2.22",
    "@types/chai-as-promised": "7.1.4",
    "@types/mocha": "9.0.0",
    "@types/node": "13.13.52",
    "@types/pino": "7.0.5",
    "@types/react": "17.0.17",
    "@types/react-test-renderer": "17.0.1",
    "@types/sinon": "10.0.2",
    "@types/sinon-chai": "3.2.5",
    "autoprefixer": "10.3.7",
    "aws-amplify": "4.3.6",
    "aws-cdk": "1.132.0",
    "aws-cdk-local": "1.65.8",
    "aws-sdk": "2.967.0",
    "aws-sdk-client-mock": "0.5.6",
    "axios-logger": "2.5.0",
    "babel-jest": "27.2.4",
    "babel-loader": "8.2.3",
    "chai": "4.3.4",
    "chai-as-promised": "7.1.1",
    "conventional-changelog-conventionalcommits": "4.6.1",
    "copyfiles": "2.4.1",
    "cross-env": "7.0.3",
    "dotenv": "10.0.0",
    "eslint": "7.32.0",
    "eslint-config-next": "11.1.2",
    "graphql-schema-utilities": "1.1.3",
    "husky": "7.0.2",
    "identity-obj-proxy": "3.0.0",
    "jest": "27.2.4",
    "mocha": "9.1.3",
    "mocha-chai-jest-snapshot": "1.1.3",
    "mocha-junit-reporter": "2.0.2",
    "mocha-multi-reporters": "1.5.1",
    "node-jq": "2.1.0",
    "npm-run-all": "4.1.5",
    "nyc": "15.1.0",
    "postcss": "8.3.9",
    "prettier": "2.4.1",
    "react-test-renderer": "17.0.2",
    "rimraf": "3.0.2",
    "semantic-release": "18.0.1",
    "sinon": "11.1.2",
    "sinon-chai": "3.7.0",
    "tailwindcss": "2.2.16",
    "ts-node": "10.2.0",
    "tsconfig-paths-webpack-plugin": "3.5.2",
    "tslint": "6.1.3",
    "tslint-config-prettier": "1.18.0",
    "typescript": "4.3.5",
    "typescript-plugin-css-modules": "3.4.0"
  },
  "scripts": {
    "clean": "rimraf .cdk-* .next .nyc_output .report .serverless .serverless_nextjs build cdk.out out schema.graphql common/graphql/*",
    "prepare": "husky install",
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "generate:velhoapi": "cross-env docker run --rm --env-file .env.test -e VELHO_AUTH_URL -e VELHO_API_URL -e VELHO_USERNAME -e VELHO_PASSWORD -e VELHO_ACCESS_TOKEN=\"$(ts-node --project=tsconfig.cdk.json -r dotenv/config ./tools/velho/authenticate.ts dotenv_config_path=.env.test)\" -v $(pwd):/work 283563576583.dkr.ecr.eu-west-1.amazonaws.com/hassu-buildimage:latest /work/tools/velho/gradlew -p /work/tools/velho --info",
    "postgenerate:velhoapi": "ts-node --project=tsconfig.cdk.json ./tools/velho/processMetaData.ts ./backend/src/velho/metadata.json",
    "pregenerate:api": "graphql-schema-utilities -s \"{./graphql/types.graphql,./graphql/inputs.graphql,./graphql/operations.graphql}\" -o schema.graphql",
    "generate:api": "cross-env docker run --rm -v $(pwd):/work 283563576583.dkr.ecr.eu-west-1.amazonaws.com/hassu-buildimage:latest bash -c \"cd /work && amplify codegen\"",
    "generate": "npm-run-all --aggregate-output --parallel generate:*",
    "lint:prettier": "prettier --check \"backend/**/*.ts\" \"src/**/*.ts\"",
    "lint:tslint": "tslint --project tsconfig.json",
    "lint:app": "next lint",
    "lint:tsc": "tsc --project tsconfig.json",
    "lint": "npm-run-all --aggregate-output --parallel lint:*",
    "localstack": "docker-compose -f deployment/localstack/docker-compose.yml up -d && cross-env ENVIRONMENT=localstack TS_NODE_PROJECT=\"./tsconfig.cdk.json\" cdklocal bootstrap && cross-env ENVIRONMENT=localstack TS_NODE_PROJECT=\"./tsconfig.cdk.json\" cdklocal deploy database --require-approval never",
    "localstack:stop": "docker-compose -f deployment/localstack/docker-compose.yml down",
    "setupenvironment": "ts-node --project=tsconfig.cdk.json deployment/bin/setupEnvironment.ts",
    "test": "npm-run-all --aggregate-output --parallel \"test:!(backend)\"",
    "husky:test": "npm-run-all --aggregate-output --parallel \"test:!(backend|integration)\"",
    "test:frontend": "jest --config \"./jest.frontend.config.js\"",
    "test:backend": "cross-env TS_NODE_PROJECT=\"./tsconfig.backend.json\" mocha -r ts-node/register \"backend/test/**/*.test.ts\" --reporter mocha-multi-reporters --reporter-options configFile=mocha_reporter_config.json",
    "test:coverage": "nyc --report-dir .report/coverage --reporter text-summary --reporter lcov --reporter json --reporter clover npm run test:backend",
    "test:integration": "cross-env TS_NODE_PROJECT=\"./tsconfig.backend.json\" mocha -r ts-node/register \"backend/integrationtest/**/*.test.ts\"",
    "watch:test:frontend": "jest --config \"./jest.frontend.config.js\" --watch",
    "watch:test:backend": "cross-env TS_NODE_PROJECT=\"./tsconfig.backend.json\" mocha $NODE_DEBUG_OPTION -r dotenv/config --require ts-node/register --watch --watch-extensions ts --watch-files backend --watch-files common \"backend/test/**/*.test.ts\"",
    "watch:test:integration": "cross-env TS_NODE_PROJECT=\"./tsconfig.backend.json\" mocha $NODE_DEBUG_OPTION -r dotenv/config --require ts-node/register --watch --watch-extensions ts --watch-files backend --watch-files common \"backend/integrationtest/**/*.test.ts\"",
    "deploy:database": "cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu\" deploy database --require-approval never",
    "postdeploy:database": "npm run setupenvironment",
    "deploy:backend": "cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu\" deploy backend --require-approval never",
    "postdeploy:backend": "npm run setupenvironment",
    "predeploy:frontend": "rimraf build .next",
    "deploy:frontend": "cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu\" deploy frontend --require-approval never",
    "postdeploy:frontend": "npm run setupenvironment",
    "deploy:app": "REACT_APP_API_URL= && npm run build && aws s3 sync out s3://hassu-app-$ENVIRONMENT",
    "deploy:pipeline": "cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu-pipeline\" deploy hassu-pipeline --require-approval never",
    "deploy:pipeline:main": "cross-env ENVIRONMENT=dev BUILD_BRANCH=main cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu-pipeline\" deploy hassu-pipeline --require-approval never",
    "deploy:pipeline:test": "cross-env ENVIRONMENT=test BUILD_BRANCH=test cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu-pipeline\" deploy hassu-pipeline --require-approval never",
    "deploy:pipeline:feature": "cross-env ENVIRONMENT=feature cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu-pipeline\" deploy hassu-pipeline --require-approval never",
    "pipeline:bootstrap": "ACCOUNT_ARN=\"$(ts-node --project=tsconfig.cdk.json deployment/bin/get-account-arn.ts)\" && cdk bootstrap --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu-pipeline\" --cloudformation-execution-policies arn:aws:iam::aws:policy/AdministratorAccess $ACCOUNT_ARN",
    "presynth": "rimraf build cdk.out .next",
    "synth": "cdk $NODE_DEBUG_OPTION --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu\" synth",
    "destroy": "cdk --app \"ts-node --project=tsconfig.cdk.json ./deployment/bin/hassu\" destroy \"*\" --require-approval never",
    "storybook": "start-storybook -p 6006 -s ./public",
    "build-storybook": "build-storybook -s ./public",
    "get-next-version": "npx semantic-release --no-ci --dryRun",
    "release": "npx semantic-release --no-ci"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "engines": {
    "node": ">=14.17.0",
    "npm": ">=7.21.0"
  }
}
