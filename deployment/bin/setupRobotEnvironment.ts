/* tslint:disable:no-console */
// This script examines stack outputs and parameter store parameters, and writes .env.local and .env.test files

import { BaseConfig } from "../../common/BaseConfig";
import * as fs from "fs";
import { HassuSSMParameters, readParametersByPath, readParametersForEnv, Region } from "./setupEnvironment";

function writePyEnvFile(fileName: string, variables: { [p: string]: string }) {
  let envFile = "import os\n# This file is automatically generated\n";
  for (const key in variables) {
    if (variables.hasOwnProperty(key) && variables[key]) {
      envFile += `${key} = "${variables[key]}"\n`;
    }
  }
  envFile += 'if os.getenv("DOCKER") == "false":\n' + "    SERVER = NO_DOCKER_SERVER\n";

  fs.writeFileSync(fileName, envFile);
}

async function main() {
  const variables = await readParametersForEnv<HassuSSMParameters>(BaseConfig.infraEnvironment, Region.EU_WEST_1);

  const robotVariables: any = {};

  if (BaseConfig.isPermanentEnvironment()) {
    robotVariables.SERVER =
      "https://" +
      variables.basicAuthenticationUsername +
      ":" +
      variables.basicAuthenticationPassword +
      "@" +
      variables.FrontendDomainName;
    robotVariables.NO_DOCKER_SERVER = robotVariables.SERVER;
    robotVariables.LOCAL_SERVER = "false";
  } else {
    // For local testing
    robotVariables.SERVER = "http://host.docker.internal:3000";
    robotVariables.NO_DOCKER_SERVER = "http://localhost:3000";
    robotVariables.LOCAL_SERVER = "true";
  }

  const testUsers = await readParametersByPath("/testusers/", Region.EU_WEST_1);
  for (const user in testUsers) {
    if (testUsers.hasOwnProperty(user)) {
      const [username, password, roles] = testUsers[user].split(" ");
      robotVariables[`${user}_USERNAME`] = username;
      robotVariables[`${user}_PASSWORD`] = password;
      robotVariables[`${user}_ROLES`] = roles || "Atunnukset,hassu_admin";
    }
  }

  writePyEnvFile("robotenv.py", robotVariables);
}

main().catch((e) => {
  console.log(e);
  process.exit(1);
});
// "Atunnukset",
//   "hassu_admin"
