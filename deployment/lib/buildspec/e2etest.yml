version: 0.2

env:
  parameter-store:
    ROCKET_CHAT_TOKEN: /RocketChatToken
    ROCKET_CHAT_USER_ID: /RocketChatUserId

phases:
  install:
    commands:
      - ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)
      - aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin "$ACCOUNT_ID.dkr.ecr.eu-west-1.amazonaws.com"
      - nohup /usr/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

      - mv /packages/tools/velho/.gradle /tools/velho/
      - mv /packages/tools/velho/buildSrc/.gradle /tools/velho/buildSrc/
      - npm ci

  build:
    commands:
      - npm run e2e:test:run
  post_build:
    commands:
      - ./deployment/bin/reportBuildStatus.sh -t "$ROCKET_CHAT_TOKEN" -u "$ROCKET_CHAT_USER_ID" -r "$CODEBUILD_BUILD_SUCCEEDING" -m "cypress $ENVIRONMENT test" -d "CodeBuild $CODEBUILD_BUILD_URL\nTest report available at https://$FRONTEND_DOMAIN_NAME_DEV/report/robot-$ENVIRONMENT/$CODEBUILD_BUILD_NUMBER/index.html"
      - echo Test report available at https://$FRONTEND_DOMAIN_NAME_DEV/report/robot-$ENVIRONMENT/$CODEBUILD_BUILD_NUMBER/index.html

artifacts:
  base-directory: "cypress/report"
  files:
    - "**/*"
  name: report/robot-$ENVIRONMENT/$CODEBUILD_BUILD_NUMBER

cache:
  paths:
    - "/root/.npm/**/*"
    - "/root/.cache/**/*"

reports:
  unit-tests:
    files: "xunit.xml"
    base-directory: cypress/report
    discard-paths: true
